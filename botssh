#!/bin/bash
clear
#--------[ COPIADO POR @gatesccn ]-----------#
source ShellBot.sh
touch lista
[[ -z $1 ]] && {
    clear && echo "INFORME DE TOKEN" && return 0
}
# Informa√ß√µes Server 2
ip_server2="-IP-AQUI"
senha_server2="-Contra-AQUI"
# Informa√ß√µes Server 3
ip_server3="-IP-AQUI"
senha_server3="-Contra-AQUI"
[[ ! -e RESET ]] && touch RESET
api_bot=$1
ShellBot.init --token "$api_bot" --monitor --flush
ShellBot.username

# - Funcao menu
menu() {
    local msg
        msg="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="‚úåÔ∏èüòÉ Hola <b>${message_from_first_name[$id]}</b>, Bienvenido!\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="<b>Genere Su Usuario Gratis x6 Horas</b>\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="<b>Funcionable para Cualquier pais que use cloudflare</b>\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard1" \
        --parse_mode html
        return 0
}

# - Funcao  PIX  probando aun  @gatesccn(19 mayo)
PIX() {
    local msg
        msg="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="üí†    GENERAR UNA CUENTA SSH CLOUDFLARE     üí†\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="üîÅ          SEGUNDA PROPAGANDA                  üîÅ\n"
        msg+="üîë ‚îú NOTA 1   \n"
        msg+="üë§ ‚îú HTTP DRAGON VPN     \n"
        msg+="üí∞ ‚îî Cops$ 20,00\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="‚úÖ           CONFIRMAR PAGO           ‚úÖ\n"
        msg+="ENVIAR PRUEBA A @Nefi746\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="VERIFICACI√ìN DE PAGO EN 24H\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard1" \
        --parse_mode html
        return 0
}

# - Funcao pix
pix() {
    local msg
        msg="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="üí† BUENAS Y BIENVENIDO üí†\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="üëø PARA OBTENER UN SERVICIO PAGADO üëø\n"
        msg+="üë§ ‚îú HTTP DRAGON VPN"
        msg+="‚îúCLASES DESDE"
        msg+="üí∞ ‚îî Cops$ 20,00\n"
        msg+="5USD"
        msg+="‚îúVPS DESDE"
        msg+="üí∞ ‚îî Cops$ 20,00\n"
        msg+="5USD"
        msg+="‚îúY MUCHA MAS VARIEDAD DE APLIACIONES Y COSAS SOBRE NETFREE"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="‚úÖ       ENVIAR EL PAGO Y        ‚úÖ\n"
        msg+="ENVIAR PRUEBA A @Nefi746\n"
        msg+="‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n"
        msg+="VERIFICACI√ìN DE PAGO EN 6 HORAS MAXIMO\n"
        msg+="ACEPTAMOS\n"
        msg+="-NEQUI   -BANCO COLOMBIA\n"
        msg+="-PAYPAL  -AIRTM GIFTCARD\n"
        msg+="-TIGO MONEY -BANCO UNION\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard1" \
        --parse_mode html
        return 0
}

# - funcao criar ssh
criarteste() {
    [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ùå Acceso denegado, consulta la hora de tu √∫ltima creaci√≥n y regresa solo cuando completes las 48 horas de tu √∫ltima creaci√≥n."
      return 0
    }
    usuario=$(echo GAxTxExS$(( RANDOM% + 999 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='4'
    tuserdate=$(date '+%C%y/%m/%d' -d " 2 days")
    useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
    chmod +x /etc/SSHPlus/userteste/$usuario.sh
    at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
    echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n        ‚úÖ Creado Con Exito ‚úÖ\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n  
DOMINIO CLOUDFLARE:ssh.dragonvpn.online         
üë§ USUARIO: <code>$usuario</code>\n               üîë CONTRASE√ëA: <code>$senha</code>\n             ‚è∞ Expira en: $tempo Hora")\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n   ‚ÑπÔ∏è COMO CONECTAR A INTERNET\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚Ä¢ Abra la aplicaci√≥n que instalaste.\n‚Ä¢ Selecione su operadora.\n‚Ä¢ Digite o usu√°rio y a Contra recebida en su app.\n‚Ä¢ Activa los datos m√≥viles y desactiva Wi-Fi\n‚Ä¢ Haz clic en Conectar.\n‚Ä¢ Debe aparecer Conexi√≥n establecida.\n‚Ä¢ Si apareci√≥, mira youtube y compru√©balo.\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n ‚ö†Ô∏è NO PUEDES CONECTARTE Y NECESITAS AYUDA HABLA CON EL ADMIN\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨ ‚ñ¨‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n üòç TE GUSTA? ESCRIBE EL HAGA CLIC EN /PIX" \
    --parse_mode html
    return 0
}

# - funcao criar ssh 2 7dias testear
criarteste2() {
   [[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ùå Acceso denegado, verifique la hora de su √∫ltima creaci√≥n y regrese solo cuando complete 7 dias de su √∫ltima creaci√≥n. !"
      return 0
    }
    usuario=$(echo MANDARIN$(( RANDOM% + 250 )))
    senha=$((RANDOM% + 99999))
    limite='2'
    tempo='24'
    tuserdate=$(date '+%C%y/%m/%d' -d " +7 days")
    if sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 echo "ok" 1>/dev/null 2>/dev/null; then
		sshpass -p "$senha_server2" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server2 << EOF
		useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
chmod +x /etc/SSHPlus/userteste/$usuario.sh
at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
EOF
	echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Creado con exito </b> ‚úÖ\n\nIP: $ip_server2\nUSUARIO: <code>$usuario</code>\nContrase√±a: <code>$senha</code>\n\n‚è≥ Expira en: $tempo Hora")" \
    --parse_mode html
    return 0
else
ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
	--text "$(echo -e Error intente luego!)" \
	--parse_mode html
	return 0
fi
}

# - funcao criar ssh 3
criarteste3() {
	[[ $(grep -wc ${callback_query_from_id} lista) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "‚ùå Acceso denegado, verifique la hora de su √∫ltima creaci√≥n y regrese solo cuando complete 24 horas de su √∫ltima creaci√≥n.. !"
      return 0
    }
    usuario=$(echo MaxNDAxRIN$(( RANDOM% + 250 )))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='1'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    if sshpass -p "$senha_server3" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server3 echo "ok" 1>/dev/null 2>/dev/null; then
		sshpass -p "$senha_server3" ssh -o ConnectTimeout=2 -o StrictHostKeyChecking=no root@$ip_server3 << EOF
		useradd -M -N -s /bin/false $usuario -e $tuserdate > /dev/null 2>&1
    (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
    echo "$senha" > /etc/SSHPlus/senha/$usuario
    echo "$usuario $limite" >> /root/usuarios.db
    echo "#!/bin/bash
pkill -f "$usuario"
userdel --force $usuario
grep -v ^$usuario[[:space:]] /root/usuarios.db > /tmp/ph ; cat /tmp/ph > /root/usuarios.db
rm /etc/SSHPlus/senha/$usuario > /dev/null 2>&1
rm -rf /etc/SSHPlus/userteste/$usuario.sh" > /etc/SSHPlus/userteste/$usuario.sh
chmod +x /etc/SSHPlus/userteste/$usuario.sh
at -f /etc/SSHPlus/userteste/$usuario.sh now + $tempo hour > /dev/null 2>&1
EOF
	echo ${callback_query_from_id} >> lista
    # - ENVIA O SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "‚úÖ <b>Creado Con Exito</b> ‚úÖ\n\nIP: $ip_server3\nUSUARIO: <code>$usuario</code>\nContrase√±a: <code>$senha</code>\n\n‚è≥ Expira en: $tempo Hora")" \
    --parse_mode html
    return 0
else
ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
	--text "$(echo -e I!)" \
	--parse_mode html
	return 0
fi
}

#informacoes usuario
infouser () {
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
	--text "$(echo -e "Nombre:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nUsuario: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: ${message_from_id[$(ShellBot.ListUpdates)]} " \
	--parse_mode html
	return 0
}

unset botao1
botao1=''
ShellBot.InlineKeyboardButton --button 'botao1' --line 1 --text '‚ôªÔ∏è Generar LOGIN DE 6h ‚ôªÔ∏è' --callback_data 'gerarssh'
ShellBot.InlineKeyboardButton --button 'botao1' --line 2 --text 'üì• Aplicacion MediaFire üì•' --callback_data '2' --url 'https://github.com/Gatesccn/APKSGRATIS/raw/main/base.apk' # LINK APP
ShellBot.InlineKeyboardButton --button 'botao1' --line 3 --text 'ü§ë Sea REVENDEDOR ü§ëÔ∏è' --callback_data '2' --url 't.me/gatesccn' # LINK PV
ShellBot.InlineKeyboardButton --button 'botao1' --line 4 --text 'üè∑Ô∏è ENVIAR COMPROVANTE üè∑Ô∏èÔ∏è' --callback_data '2' --url 't.me/gatesccn' # LINK PV
ShellBot.regHandleFunction --function criarteste --callback_data gerarssh
ShellBot.regHandleFunction --function criarteste2 --callback_data gerarssh2
ShellBot.regHandleFunction --function criarteste3 --callback_data gerarssh3
unset keyboard1
keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'botao1')"
while :; do
   [[ "$(date +%d)" != "$(cat RESET)" ]] && {
   	echo $(date +%d) > RESET
   	echo ' ' > lista
   }
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates); do
    (
      ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
      comando=(${message_text[$id]})
      [[ "${comando[0]}" = "/menu"  || "${comando[0]}" = "/start" ]] && menu
      [[ "${comando[0]}" = "/pix"  ]] && pix
      [[ "${comando[0]}" = "/PIX"  ]] && pix
    ) &
  done
done